{"version":3,"sources":["webpack:///./src/components/useWindowResize.js"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":"4FAAA,+DAEe,SAASA,IAAgB,MAIAC,mBAAS,CACzCC,WAAOC,EACPC,YAAQD,IAFLE,EAJ6B,KAIjBC,EAJiB,KA6BpC,OApBAC,qBAAU,WAEN,SAASC,IAELF,EAAc,CACVJ,MAAOO,OAAOC,WACdN,OAAQK,OAAOE,cAWvB,OANAF,OAAOG,iBAAiB,SAAUJ,GAGlCA,IAGO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACnD,IAEIH","file":"27-3826f03a2d8856a1217c.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nexport default function useWindowSize() {\n\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n}"],"sourceRoot":""}